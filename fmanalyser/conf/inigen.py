# -*- coding: utf-8 -*-
from fmanalyser.conf import fmconfig
from fmanalyser.device.controllers import core_controllers
from fmanalyser.utils.command import BaseCommand
from fmanalyser.utils.datastructures import OrderedDict
from optparse import make_option
import datetime
import fmanalyser
import os
import sys

DEFAULT_INI_OUTPUT = os.path.join(os.path.dirname(fmanalyser.__file__),
                                  os.pardir,
                                  'conf.example.ini')
HEADER_TEMPLATE = \
"""; FM Analyser example configuration file
; Generated by %(scriptname)s %(version)s, %(now)s
"""

class SectionExample(object):
    
    def __init__(self, section_cls, exclude_options=(), **kwargs):
        self.section_cls = section_cls
        self.exclude_items = exclude_options
        self.kwargs = kwargs

    def __getattr__(self, key):
        if key in self.kwargs:
            return self.kwargs[key]
        return getattr(self.section_cls, key) 

    def get_items(self):
        items = []
        for k, opt in self.section_cls._options.items():
            if k in self.exclude_items:
                continue
            items.append((k, opt))
        return items
        
class Command(BaseCommand):
    
    base_options = BaseCommand.base_options + (
        make_option('-o', '--output',
            default=DEFAULT_INI_OUTPUT,
            help='output file',
        ),
    )
    
    def execute(self):
        f = os.path.abspath(self.options.output)
        with open(f, 'w') as fp:
            self.dump(fp)
        
        self.logger.info('%s written' % f)
    
    def dump(self, fp):
        header = HEADER_TEMPLATE % {
            'scriptname': os.path.basename(__file__),
            'version': fmanalyser.__version__,
            'now': datetime.datetime.now(),
        }
        fp.write(header + '\n')
        
        section_cls_dict = OrderedDict(
            (Section.basename, Section)
            for Section in fmconfig.Config.section_classes
        ) 
        examples = []
        examples.append(SectionExample(section_cls_dict.pop('global')))
        
        # Global device section        
        examples.append(SectionExample(section_cls_dict.pop('device',),
           exclude_options = ('model',),
        ))
        # Examples per available controllers
        for name, Controller in core_controllers.items():
            controller_section = Controller.config_section_factory()
            examples.append(SectionExample(controller_section,
                basename = 'device:%s_example' % (name,),
            ))
            
        # Other sections
        examples.extend(
            SectionExample(s) for s in section_cls_dict.values()
        )
        
        
        for example in examples:
            fp.write('; Section: %s\n' % example.basename)
            self._wrap_description(example.ini_help, fp)
            fp.write('[%s]\n' % example.basename)
            for k, option in example.get_items():
                default = option.unclean(option.default)
                reqdef = ''
                if option.required:
                    reqdef += ' Required.'
                else:
                    reqdef += ' Default: %s.' % default
                if option.ini_help:
                    self._wrap_description(option.ini_help, fp)
                    fp.write(';%s\n' % reqdef)
                else:
                    fp.write('; %s.%s\n' % (k, reqdef))
                if option.choices:
                    fp.write('; Choices: [%s]\n' % ', '.join(str(c) for c in option.choices))
                fp.write('%s = %s\n' % (k, default))
                fp.write('\n')
            fp.write('\n')
            
    def _wrap_description(self, s, fp):
        for l in s.splitlines():
            fp.write('; %s\n' % l)
            
def main():
    return Command().run()

if __name__ == '__main__':
    sys.exit(main())