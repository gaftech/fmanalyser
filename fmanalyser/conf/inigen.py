#!/usr/bin/env python
# -*- coding: utf-8 -*-
from fmanalyser.device.controllers import _core_controllers,\
    get_controller_class
from fmanalyser.device.controllers.base import DeviceController
from fmanalyser.plugins import Plugin, core_plugins
from fmanalyser.conf import GlobalConfigSection
from fmanalyser.utils.command import BaseCommand
from optparse import make_option
import datetime
import fmanalyser.test
import os
import sys

DEFAULT_INI_OUTPUT = os.path.join(os.path.dirname(fmanalyser.__file__),
                                  os.pardir,
                                  'conf.example.ini')
HEADER_TEMPLATE = \
"""; FM Analyser example configuration file
; Generated by %(scriptname)s %(version)s, %(now)s
"""

class ExampleSection(object):
    
    def __init__(self, holder, exclude_options=(), **kwargs):
        self.holder = holder
        self.exclude_items = exclude_options
        self.kwargs = kwargs

    def __getattr__(self, key):
        if key in self.kwargs:
            return self.kwargs[key]
        return getattr(self.holder, key) 

    def get_items(self):
        items = []
        for k, opt in self.holder._options.items():
            if k in self.exclude_items:
                continue
            items.append((k, opt))
        return items
        
class Command(BaseCommand):
    
    base_options = BaseCommand.base_options + (
        make_option('-o', '--output',
            default=DEFAULT_INI_OUTPUT,
            help='output file',
        ),
    )
    
    def execute(self):
        f = os.path.abspath(self.options.output)
        with open(f, 'w') as fp:
            self.dump(fp)
        
        self.logger.info('%s written' % f)
    
    def dump(self, fp):
        header = HEADER_TEMPLATE % {
            'scriptname': os.path.basename(__file__),
            'version': fmanalyser.__version__,
            'now': datetime.datetime.now(),
        }
        fp.write(header + '\n')
        
        self.append_section(fp, ExampleSection(GlobalConfigSection))
        
        # Global device section        
        self.append_section(fp, ExampleSection(DeviceController,
           exclude_options = ('model',),
        ))
        # Examples per available controllers
        for name in _core_controllers.keys():
            Controller = get_controller_class()
            self.append_section(fp, ExampleSection(
                Controller,
                section_name = 'device:%s_example' % (name,),
            ))
        
        # Core plugins
        for CorePlugin in core_plugins:
            self.append_section(fp, ExampleSection(CorePlugin))
        
        # Base user plugin
        self.append_section(fp, ExampleSection(Plugin))
        
        # TestSection
        self.append_section(fp, ExampleSection(fmanalyser.test.ConfigSection))
    
    def append_section(self, fp, example):
        fp.write('; Section: %s\n' % example.section_name)
        self._wrap_description(example.ini_help, fp)
        fp.write('[%s]\n' % example.section_name)
        for k, option in example.get_items():
            default = option.unclean(option.default)
            reqdef = ''
            if option.required:
                reqdef += ' Required.'
            else:
                reqdef += ' Default: %s.' % default
            if option.ini_help:
                self._wrap_description(option.ini_help, fp)
                fp.write(';%s\n' % reqdef)
            else:
                fp.write('; %s.%s\n' % (k, reqdef))
            if option.choices:
                fp.write('; Choices: [%s]\n' % ', '.join(str(c) for c in option.choices))
            fp.write('%s = %s\n' % (k, default))
            fp.write('\n')
        fp.write('\n')
        
    def _wrap_description(self, s, fp):
        for l in s.splitlines():
            fp.write('; %s\n' % l)
            
def main():
    return Command().run()

if __name__ == '__main__':
    sys.exit(main())