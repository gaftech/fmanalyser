; FM Analyser example configuration file
; Generated by inigen.py 0.1.dev, 2012-05-12 19:25:49.306505

; Section: global
; Software global parameters.
; These can be overriden by command line options.
[global]
; Logging level as defined by the python logging module.
; (DEBUG=10, INFO=20, WARNING=30, CRITICAL=50).
; Default: 30.
loglevel = 30

; data_dir. Default: ~/.fmanalyser/var.
data_dir = ~/.fmanalyser/var

; watcher_sleep_time. Default: 0.1.
watcher_sleep_time = 0.1


; Section: device
[device]
; enabled. Default: False.
enabled = False


; Section: device:p175_example
[device:p175_example]
; Serial port. USB-autodetection if not set.
; Default: None.
port = None

; Use 50 kHz frequency step
; Default: None.
fine_tune = None

; high_scan_sens. Default: None.
high_scan_sens = None

; Trust (or not) device statuses (like measuring mode) that are cached by the client.
; Setting this to true means that you're sure that the device is not accessed manually or by another software.
; Default: False.
use_cache = False

; enabled. Default: False.
enabled = False

; model. Default: p175.
model = p175

; Time during the program sleeps, waiting for the device to acquire measurements in rds mode.
; Default: 5.
rds_lock_time = 5

; Time during the program sleeps, waiting for the device to acquire measurements in measuring mode.
; Default: 5.
mes_lock_time = 5

; Time during the program sleeps, waiting for the device to acquire measurements in stereo mode.
; Default: 5.
stereo_lock_time = 5


; Section: channel
[channel]
; enabled. Default: False.
enabled = False

; Shortcut to enable/disable all RDS data variables
; Default: None.
rds_data_enabled = None

; Configured name of the device used to update this channel.
; Default: None.
device = None

; frequency_enabled. Default: True.
frequency_enabled = True

; Channel frequency as a floating point number in MHz
; If not given, the current device frequency will be used.
; Default: None.
frequency = None

; rf_enabled. Default: None.
rf_enabled = None

; rf. Default: None.
rf = None

; rf_high. Default: 6.
rf_high = 6

; rf_low. Default: 6.
rf_low = 6

; quality_enabled. Default: None.
quality_enabled = None

; quality. Default: 5.
quality = 5

; pilot_enabled. Default: None.
pilot_enabled = None

; pilot. Default: 6.
pilot = 6

; pilot_high. Default: 0.5.
pilot_high = 0.5

; pilot_low. Default: 0.5.
pilot_low = 0.5

; rds_enabled. Default: None.
rds_enabled = None

; rds. Default: 4.
rds = 4

; rds_high. Default: 0.5.
rds_high = 0.5

; rds_low. Default: 0.5.
rds_low = 0.5


; Section: snmpd
[snmpd]
; enabled. Default: False.
enabled = False

; ipv4. Default: True.
ipv4 = True

; host. Default: 127.0.0.1.
host = 127.0.0.1

; ipv6. Default: False.
ipv6 = False

; ipv6_host. Default: ::1.
ipv6_host = ::1

; port. Default: 161.
port = 161

; v1. Default: True.
v1 = True

; v2c. Default: True.
v2c = True

; security_name. Default: security.
security_name = security

; community_name. Default: public.
community_name = public

; v3. Default: True.
v3 = True

; auth_protocol. Default: MD5.
; Choices: [SHA1, MD5]
auth_protocol = MD5

; priv_protocol. Default: DES.
; Choices: [AES, DES]
priv_protocol = DES

; user_name. Default: user.
user_name = user

; user_security_level. Default: noAuthNoPriv.
; Choices: [noAuthNoPriv, authNoPriv, authPriv]
user_security_level = noAuthNoPriv

; user_auth_key. Default: auth_key.
user_auth_key = auth_key

; user_priv_key. Default: priv_key.
user_priv_key = priv_key

; admin_name. Default: admin.
admin_name = admin

; admin_security_level. Default: authNoPriv.
; Choices: [noAuthNoPriv, authNoPriv, authPriv]
admin_security_level = authNoPriv

; admin_auth_key. Default: auth_key.
admin_auth_key = auth_key

; admin_priv_key. Default: priv_key.
admin_priv_key = priv_key


; Section: redis
[redis]
; enabled. Default: False.
enabled = False

; host. Default: localhost.
host = localhost

; port. Default: 6379.
port = 6379

; db. Default: 0.
db = 0

; expire. Default: 30.
expire = 30


; Section: plugin
; 
; Base config for all user defined plugins.
; It must be extended for each plugin by creating a section named [plugin:<your_plugin_name>].
[plugin]
; Full python class name (e.g. myapp.mymodule.MyPluginClass)
; Required.
cls = None

; enabled. Default: False.
enabled = False


; Section: test
[test]
; live_tests. Default: True.
live_tests = True


